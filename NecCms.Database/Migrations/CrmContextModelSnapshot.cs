// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NecCms.Database;

namespace NecCms.Database.Migrations
{
    [DbContext(typeof(CrmContext))]
    partial class CrmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("NecCms.Database.CustomLogger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("QueryString")
                        .HasMaxLength(100);

                    b.Property<string>("RemoteIpAddress")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("StatusCode");

                    b.Property<DateTime>("Tarih");

                    b.Property<long>("Time");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Loggers");
                });

            modelBuilder.Entity("NecCms.Database.Dosyalar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<long>("Boyutu");

                    b.Property<int?>("KullaniciId");

                    b.Property<short>("Sil");

                    b.Property<DateTime>("Tarih");

                    b.Property<string>("Tipi")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Yolu")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Dosyalar");
                });

            modelBuilder.Entity("NecCms.Database.Icerik+FotografGalerisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FotografGalerisiDosyaId");

                    b.Property<int>("IcerikId");

                    b.Property<int?>("KullaniciId");

                    b.Property<short>("Sil");

                    b.Property<DateTime>("Tarih");

                    b.HasKey("Id");

                    b.HasIndex("FotografGalerisiDosyaId");

                    b.HasIndex("IcerikId");

                    b.ToTable("FotografGalerisi");
                });

            modelBuilder.Entity("NecCms.Database.Icerik+FotografGalerisiDosyalar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DosyaId");

                    b.Property<int?>("KullaniciId");

                    b.Property<short>("Sil");

                    b.Property<DateTime>("Tarih");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.ToTable("FotografGalerisiDosyalar");
                });

            modelBuilder.Entity("NecCms.Database.Icerik+Icerikler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Baslik")
                        .IsRequired();

                    b.Property<int>("Durum");

                    b.Property<string>("Giris")
                        .IsRequired();

                    b.Property<string>("Icerik");

                    b.Property<int?>("KullaniciId");

                    b.Property<int>("MenuId");

                    b.Property<int?>("ResimId");

                    b.Property<short>("Sil");

                    b.Property<DateTime>("Tarih");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.Property<DateTime>("YayinlanmaTarihi");

                    b.Property<int>("YazarId");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("ResimId");

                    b.HasIndex("YazarId");

                    b.ToTable("Icerikler");
                });

            modelBuilder.Entity("NecCms.Database.IcerikTipDegerleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Alan")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Deger")
                        .HasMaxLength(500);

                    b.Property<int>("DegerInt");

                    b.Property<int>("IcerikTipiId");

                    b.Property<int?>("KullaniciId");

                    b.Property<short>("Sil");

                    b.Property<int>("Sira");

                    b.Property<DateTime>("Tarih");

                    b.HasKey("Id");

                    b.HasIndex("IcerikTipiId");

                    b.ToTable("IcerikTipDegerleri");
                });

            modelBuilder.Entity("NecCms.Database.IcerikTipleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Alanlar")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Kodu")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("KullaniciId");

                    b.Property<short>("Sil");

                    b.Property<DateTime>("Tarih");

                    b.HasKey("Id");

                    b.ToTable("IcerikTipleri");
                });

            modelBuilder.Entity("NecCms.Database.Iletisim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Konu")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("KullaniciId");

                    b.Property<short>("Sil");

                    b.Property<DateTime>("Tarih");

                    b.HasKey("Id");

                    b.ToTable("Iletisim");
                });

            modelBuilder.Entity("NecCms.Database.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("KullaniciId");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Rol");

                    b.Property<short>("Sil");

                    b.Property<DateTime>("Tarih");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Kullanicilar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdSoyad = "Admin",
                            Eposta = "admin@crm.com",
                            Parola = "admin@crm.com",
                            Rol = 1,
                            Sil = (short)0,
                            Tarih = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Telefon = "05456286324"
                        });
                });

            modelBuilder.Entity("NecCms.Database.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Isim")
                        .IsRequired();

                    b.Property<int?>("KullaniciId");

                    b.Property<short>("Sil");

                    b.Property<int>("Sira");

                    b.Property<DateTime>("Tarih");

                    b.Property<int>("Tip");

                    b.Property<string>("Url");

                    b.Property<int?>("UstId");

                    b.HasKey("Id");

                    b.HasIndex("UstId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("NecCms.Database.Tema+Parametre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aciklama");

                    b.Property<string>("Isim");

                    b.Property<string>("Kodu")
                        .IsRequired();

                    b.Property<int?>("KullaniciId");

                    b.Property<short>("Sil");

                    b.Property<int>("Sira");

                    b.Property<DateTime>("Tarih");

                    b.Property<int>("Tip");

                    b.HasKey("Id");

                    b.ToTable("Parametre");
                });

            modelBuilder.Entity("NecCms.Database.Tema+ParametreDegeri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Deger");

                    b.Property<int>("DegerInt");

                    b.Property<int?>("KullaniciId");

                    b.Property<int>("ParametreId");

                    b.Property<short>("Sil");

                    b.Property<DateTime>("Tarih");

                    b.HasKey("Id");

                    b.HasIndex("ParametreId");

                    b.ToTable("ParametreDegeri");
                });

            modelBuilder.Entity("NecCms.Database.Uyeler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Bolum")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<short>("Cinsiyet");

                    b.Property<DateTime>("DogumTarihi");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Hakkinda")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int?>("KullaniciId");

                    b.Property<short>("Sil");

                    b.Property<DateTime>("Tarih");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Uyeler");
                });

            modelBuilder.Entity("NecCms.Database.Icerik+FotografGalerisi", b =>
                {
                    b.HasOne("NecCms.Database.Icerik+FotografGalerisiDosyalar", "FotografGalerisiDosya")
                        .WithMany()
                        .HasForeignKey("FotografGalerisiDosyaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NecCms.Database.Icerik+Icerikler", "Icerik")
                        .WithMany()
                        .HasForeignKey("IcerikId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NecCms.Database.Icerik+FotografGalerisiDosyalar", b =>
                {
                    b.HasOne("NecCms.Database.Dosyalar", "Dosya")
                        .WithMany()
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NecCms.Database.Icerik+Icerikler", b =>
                {
                    b.HasOne("NecCms.Database.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NecCms.Database.Dosyalar", "Resim")
                        .WithMany()
                        .HasForeignKey("ResimId");

                    b.HasOne("NecCms.Database.Kullanici", "Yazar")
                        .WithMany()
                        .HasForeignKey("YazarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NecCms.Database.IcerikTipDegerleri", b =>
                {
                    b.HasOne("NecCms.Database.IcerikTipleri", "IcerikTipi")
                        .WithMany()
                        .HasForeignKey("IcerikTipiId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NecCms.Database.Menu", b =>
                {
                    b.HasOne("NecCms.Database.Menu", "Ust")
                        .WithMany()
                        .HasForeignKey("UstId");
                });

            modelBuilder.Entity("NecCms.Database.Tema+ParametreDegeri", b =>
                {
                    b.HasOne("NecCms.Database.Tema+Parametre", "Parametre")
                        .WithMany()
                        .HasForeignKey("ParametreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
